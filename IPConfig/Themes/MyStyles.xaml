<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:IPConfig.Controls"
                    xmlns:hc="https://handyorg.github.io/handycontrol">

    <Style x:Key="SplitButtonDropDownMenuStyle"
           BasedOn="{StaticResource MenuBaseStyle}"
           TargetType="{x:Type Menu}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconImageStyle"
           TargetType="{x:Type Image}">
        <Setter Property="Height" Value="16" />
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
        <Setter Property="Width" Value="16" />
    </Style>

    <Style x:Key="IconViewBoxStyle"
           TargetType="{x:Type Viewbox}">
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="16" />
    </Style>

    <Style x:Key="IconParkStyle"
           TargetType="{x:Type Path}">
        <Setter Property="Fill" Value="{DynamicResource LightPrimaryBrush}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Stretch" Value="Uniform" />
        <Setter Property="Stroke" Value="{DynamicResource MyReverseBrush}" />
        <Setter Property="StrokeEndLineCap" Value="Round" />
        <Setter Property="StrokeLineJoin" Value="Round" />
        <Setter Property="StrokeStartLineCap" Value="Round" />
        <Setter Property="StrokeThickness" Value="4" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="ContrastViewRectStyle"
           TargetType="{x:Type c:AlignDashCornerRect}">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Stroke" Value="#7FFF0000" />
        <Setter Property="StrokeDashCap" Value="Round" />
        <Setter Property="StrokeDashLine" Value="8" />
        <Setter Property="StrokeDashSpace" Value="16" />
        <Setter Property="StrokeEndLineCap" Value="Round" />
        <Setter Property="StrokeLineJoin" Value="Round" />
        <Setter Property="StrokeStartLineCap" Value="Round" />
        <Setter Property="StrokeThickness" Value="4" />

        <Style.Triggers>
            <Trigger Property="Tag" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>

            <Trigger Property="Tag" Value="{StaticResource True}">
                <Setter Property="Stroke" Value="#7FFF0000" />
                <Setter Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger Property="Tag" Value="{StaticResource False}">
                <Setter Property="Stroke" Value="#7F008000" />
                <Setter Property="Visibility" Value="Visible" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="HGridSplitterStyle"
           TargetType="{x:Type GridSplitter}">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="2" />
            </Style>
        </Style.Resources>

        <Setter Property="BorderThickness" Value="0,2" />
        <Setter Property="Height" Value="8" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="ResizeBehavior" Value="PreviousAndNext" />
    </Style>

    <Style x:Key="VGridSplitterStyle"
           TargetType="{x:Type GridSplitter}">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="2" />
            </Style>
        </Style.Resources>

        <Setter Property="BorderThickness" Value="2,0" />
        <Setter Property="ResizeBehavior" Value="PreviousAndNext" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Width" Value="8" />
    </Style>

    <Style x:Key="MyComboBoxItemStyle"
           BasedOn="{StaticResource ComboBoxItemBaseStyle}"
           TargetType="{x:Type ComboBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <!--  全局样式  -->

    <!--  当字体设置为英文字体时，中文会以类似日本汉字的风格显示，而 hc:SimpleText 则使用系统默认字体（Microsoft YaHei）。  -->
    <Style TargetType="{x:Type hc:SimpleText}">
        <Setter Property="Foreground" Value="{DynamicResource MyReverseBrush}" />
    </Style>

    <Style TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="4" />
    </Style>

    <Style TargetType="{x:Type Rectangle}">
        <Setter Property="RadiusX" Value="4" />
        <Setter Property="RadiusY" Value="4" />
    </Style>

    <Style BasedOn="{StaticResource {x:Type Window}}"
           TargetType="{x:Type Window}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>

                        <ResizeGrip x:Name="WindowResizeGrip"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    IsTabStop="false"
                                    Visibility="Collapsed" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type GridSplitter}">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="2" />
            </Style>
        </Style.Resources>

        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>

    <Style BasedOn="{StaticResource ComboBoxPlusBaseStyle}"
           TargetType="{x:Type c:ReadOnlyComboBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyComboBoxItemStyle}" />
        <Setter Property="ShowClearButton" Value="{Binding IsReadOnly, RelativeSource={RelativeSource Self}, Converter={StaticResource Boolean2BooleanReConverter}}" />
        <Setter Property="Template" Value="{StaticResource ComboBoxEditableLeftTemplate}" />
        <!--  修复光标悬停在此控件边缘时，控件快速闪烁的问题。  -->
        <Setter Property="UseLayoutRounding" Value="False" />

        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <hc:SimpleStackPanel>
                        <AdornedElementPlaceholder />
                        <!--  修复 HandyControl 无法去除验证错误信息的问题，可用一个 Border 覆盖，或重写 VerifyData 方法，清空 ErrorStr 内容。  -->
                        <!--<Border Background="{StaticResource BackgroundBrush}" Height="4" />-->
                    </hc:SimpleStackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="hc:TitleElement.TitlePlacement" Value="Left" />

        <Style.Triggers>
            <Trigger Property="IsError" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource DangerBrush}" />
                <!--  设置 ErrorStr 无效，需要在 VerifyData 方法中重写。  -->
                <!--<Setter Property="ErrorStr" Value="" />-->
                <Setter Property="ToolTip" Value="{Binding (Validation.Errors), RelativeSource={RelativeSource Self}, Converter={StaticResource ValidationErrorsToolTipConverter}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource StatusBarItemBaseStyle}"
           TargetType="{x:Type StatusBarItem}">
        <Setter Property="Padding" Value="10,4" />
    </Style>
</ResourceDictionary>
