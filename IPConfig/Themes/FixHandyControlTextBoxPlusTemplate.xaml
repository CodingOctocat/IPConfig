<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:hc="https://handyorg.github.io/handycontrol">

    <!--  Fix HandyControl Version="3.4.0"  -->

    <ControlTemplate x:Key="TextBoxPlusTopTemplate"
                     TargetType="{x:Type hc:TextBox}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="{Binding Path=(hc:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Double2GridLengthConverter}}"
                               MinHeight="{Binding Path=(hc:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid.RowDefinitions>
            <DockPanel Grid.Row="0"
                       Margin="{TemplateBinding Padding}"
                       HorizontalAlignment="{Binding Path=(hc:TitleElement.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                       LastChildFill="True"
                       Visibility="{Binding Path=(hc:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <ContentPresenter Margin="4,0,0,0"
                                  Content="{Binding Path=(hc:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                  DockPanel.Dock="Right"
                                  TextElement.Foreground="{DynamicResource DangerBrush}"
                                  Visibility="{Binding Path=(hc:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock hc:TextBlockAttach.AutoTooltip="True"
                           Text="{Binding Path=(hc:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}}"
                           TextTrimming="CharacterEllipsis"
                           TextWrapping="NoWrap" />
            </DockPanel>
            <Border Name="border"
                    Grid.Row="1"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                    SnapsToDevicePixels="True" />
            <hc:SimplePanel Name="root"
                            Grid.Row="1"
                            ClipToBounds="True"
                            SnapsToDevicePixels="true">
                <TextBlock Margin="{TemplateBinding Padding}"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                           Style="{StaticResource TextBlockDefaultThiLight}"
                           Text="{Binding Path=(hc:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                           Visibility="{TemplateBinding Text,
                                                        Converter={StaticResource String2VisibilityReConverter}}" />
                <ScrollViewer Name="PART_ContentHost"
                              Margin="-2,0"
                              Padding="{TemplateBinding Padding}"
                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                              Focusable="false"
                              ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                              ScrollViewer.VerticalScrollBarVisibility="Hidden" />
                <Border Margin="8,0,0,0"
                        Padding="8,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Stretch"
                        Panel.ZIndex="99"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{x:Null}"
                        BorderThickness="{TemplateBinding BorderThickness,
                                                          Converter={StaticResource ThicknessSplitConverter},
                                                          ConverterParameter='0,1,1,1'}"
                        CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                        Visibility="{Binding ElementName=ButtonClear, Path=Visibility}">
                    <Button Name="ButtonClear"
                            Width="Auto"
                            Height="Auto"
                            Padding="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            hc:BorderElement.CornerRadius="4"
                            hc:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}"
                            hc:IconElement.Width="14"
                            Background="{TemplateBinding Background}"
                            Command="{x:Static hc:ControlCommands.Clear}"
                            Foreground="{Binding BorderBrush, ElementName=border}"
                            Style="{StaticResource ButtonIcon}"
                            Visibility="Collapsed" />
                </Border>
            </hc:SimplePanel>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="border" Property="UIElement.Opacity" Value="0.4" />
                <Setter TargetName="root" Property="UIElement.Opacity" Value="0.4" />
            </Trigger>
            <Trigger SourceName="root" Property="UIElement.IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="root" Property="UIElement.IsMouseOver" Value="true" />
                    <Condition Property="hc:InfoElement.ShowClearButton" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger Property="UIElement.IsFocused" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="TextBoxPlusLeftTemplate"
                     TargetType="hc:TextBox">
        <Grid Height="{Binding Path=(hc:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}"
              MinHeight="{Binding Path=(hc:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Path=(hc:InfoElement.TitleWidth), RelativeSource={RelativeSource TemplatedParent}}" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <DockPanel Grid.Column="0"
                       Margin="{Binding Path=(hc:TitleElement.MarginOnTheLeft), RelativeSource={RelativeSource TemplatedParent}}"
                       HorizontalAlignment="{Binding Path=(hc:TitleElement.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                       VerticalAlignment="{Binding Path=(hc:TitleElement.VerticalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                       LastChildFill="True"
                       Visibility="{Binding Path=(hc:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <ContentPresenter Margin="4,0,0,0"
                                  Content="{Binding Path=(hc:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                  DockPanel.Dock="Right"
                                  TextElement.Foreground="{DynamicResource DangerBrush}"
                                  Visibility="{Binding Path=(hc:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock hc:TextBlockAttach.AutoTooltip="True"
                           Text="{Binding Path=(hc:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}}"
                           TextTrimming="CharacterEllipsis"
                           TextWrapping="NoWrap" />
            </DockPanel>
            <hc:SimplePanel x:Name="root"
                            Grid.Column="1">
                <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                <TextBlock Margin="{TemplateBinding Padding}"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                           Style="{StaticResource TextBlockDefaultThiLight}"
                           Text="{Binding Path=(hc:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                           Visibility="{TemplateBinding Text,
                                                        Converter={StaticResource String2VisibilityReConverter}}" />
                <ScrollViewer x:Name="PART_ContentHost"
                              Margin="-2,0,0,0"
                              Padding="{TemplateBinding Padding}"
                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                              Focusable="false"
                              HorizontalScrollBarVisibility="Hidden"
                              VerticalScrollBarVisibility="Hidden" />
                <Border Margin="8,0,0,0"
                        Padding="8,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Stretch"
                        Panel.ZIndex="99"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{x:Null}"
                        BorderThickness="{TemplateBinding BorderThickness,
                                                          Converter={StaticResource ThicknessSplitConverter},
                                                          ConverterParameter='0,1,1,1'}"
                        CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                        Visibility="{Binding ElementName=ButtonClear, Path=Visibility}">
                    <Button Name="ButtonClear"
                            Width="Auto"
                            Height="Auto"
                            Padding="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            hc:BorderElement.CornerRadius="4"
                            hc:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}"
                            hc:IconElement.Width="14"
                            Background="{TemplateBinding Background}"
                            Command="{x:Static hc:ControlCommands.Clear}"
                            Foreground="{Binding BorderBrush, ElementName=border}"
                            Style="{StaticResource ButtonIcon}"
                            Visibility="Collapsed" />
                </Border>
            </hc:SimplePanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="border" Property="Opacity" Value="0.4" />
                <Setter TargetName="root" Property="Opacity" Value="0.4" />
            </Trigger>
            <Trigger SourceName="root" Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="hc:InfoElement.ShowClearButton" Value="True" />
                    <Condition Property="IsReadOnly" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="TextBoxPlusBaseStyle"
           BasedOn="{StaticResource TextBoxExtendBaseStyle}"
           TargetType="hc:TextBox">
        <Setter Property="Template" Value="{StaticResource TextBoxPlusTopTemplate}" />
        <Style.Triggers>
            <Trigger Property="hc:InfoElement.TitlePlacement" Value="Left">
                <Setter Property="Template" Value="{StaticResource TextBoxPlusLeftTemplate}" />
                <Setter Property="Width" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>