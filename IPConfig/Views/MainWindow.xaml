<hc:Window x:Class="IPConfig.Views.MainWindow"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:b="clr-namespace:IPConfig.Behaviors"
           xmlns:c="clr-namespace:IPConfig.Controls"
           xmlns:conv="clr-namespace:IPConfig.Converters"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:hc="https://handyorg.github.io/handycontrol"
           xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
           xmlns:lang="clr-namespace:IPConfig.Languages"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:v="clr-namespace:IPConfig.Views"
           xmlns:vm="clr-namespace:IPConfig.ViewModels"
           Title="IPConfig"
           Width="488"
           Height="600"
           MinWidth="488"
           MinHeight="520"
           d:DataContext="{d:DesignInstance Type=vm:MainViewModel,
                                            IsDesignTimeCreatable=True}"
           Background="{DynamicResource RegionBrush}"
           FontFamily="Consolas,Microsoft YaHei UI"
           FontSize="14"
           Icon="/Resources/ipconfig.ico"
           PreviewKeyDown="Window_PreviewKeyDown"
           ResizeMode="CanResize"
           SizeChanged="Window_SizeChanged"
           SnapsToDevicePixels="True"
           Topmost="{Binding Topmost}"
           UseLayoutRounding="True"
           WindowStartupLocation="CenterScreen"
           mc:Ignorable="d">
    <Window.Resources>
        <conv:OperationalStatusToolTipConverter x:Key="OpStatusToolTipConverter" />

        <conv:NicIPConfigToolTipConverter x:Key="NicIPConfigToolTipConverter" />
        <conv:SelectedNicIPConfigNameConverter x:Key="SelectedNicIPConfigNameConverter" />

        <conv:SkinTypeToImageConverter x:Key="SkinTypeToImageConverter" />
        <conv:SkinTypeToolTipConverter x:Key="SkinTypeToolTipConverter" />

        <Style BasedOn="{StaticResource TextBoxPlusBaseStyle}"
               TargetType="{x:Type hc:TextBox}">
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        </Style>
    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>

        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ClosingCommand}"
                                   PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.InputBindings>
        <KeyBinding Command="{Binding SaveCommand}"
                    Gesture="Ctrl+S" />
    </Window.InputBindings>

    <hc:Window.NonClientAreaContent>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock x:Name="txtTitle"
                       VerticalAlignment="Center"
                       IsHitTestVisible="False"
                       TextTrimming="CharacterEllipsis" />

            <hc:SimpleStackPanel Grid.Column="1"
                                 MinWidth="68"
                                 Margin="12,0"
                                 HorizontalAlignment="Right"
                                 Orientation="Horizontal">
                <Button b:ContextMenuLeftClickBehavior.IsLeftClickEnabled="True"
                        Background="Transparent"
                        ContextMenuService.HorizontalOffset="-94"
                        ContextMenuService.IsEnabled="False"
                        ContextMenuService.Placement="Bottom"
                        Style="{StaticResource ButtonCustom}"
                        Tag="{Binding DataContext, RelativeSource={RelativeSource Self}}">
                    <Button.ToolTip>
                        <TextBlock>
                            <Run Text="{lang:Lang {x:Static lang:LangKey.Language}}" /><Run Text=":" />
                            <Run Text="{Binding Source={x:Static lang:LangSource.Instance}, Path=CurrentCulture.NativeName, Mode=OneWay}" />
                        </TextBlock>
                    </Button.ToolTip>

                    <Button.ContextMenu>
                        <ContextMenu ItemsSource="{Binding Languages}">
                            <ContextMenu.ItemContainerStyle>
                                <Style BasedOn="{StaticResource MenuItemBaseStyle}"
                                       TargetType="{x:Type MenuItem}">
                                    <Setter Property="Command" Value="{Binding PlacementTarget.Tag.ChangeLanguageCommand, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
                                    <Setter Property="CommandParameter" Value="{Binding Name}" />
                                    <Setter Property="Header" Value="{Binding NativeName}" />
                                    <Setter Property="InputGestureText" Value="{Binding Name}" />

                                    <Style.Triggers>
                                        <DataTrigger Value="{StaticResource True}">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource MultiValueEqualsConverter}">
                                                    <Binding Path="Name" />
                                                    <Binding Path="CurrentCulture.Name"
                                                             Source="{x:Static lang:LangSource.Instance}" />
                                                </MultiBinding>
                                            </DataTrigger.Binding>

                                            <Setter Property="FontWeight" Value="Bold" />
                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContextMenu.ItemContainerStyle>
                        </ContextMenu>
                    </Button.ContextMenu>

                    <Viewbox Width="18"
                             Height="18">
                        <Path Data="{StaticResource LangGeometry}"
                              Fill="{DynamicResource PrimaryBrush}"
                              Style="{StaticResource IconParkStyle}" />
                    </Viewbox>
                </Button>

                <ToggleButton Margin="12,0,0,0"
                              IsChecked="{Binding Topmost}"
                              Style="{StaticResource ToggleButtonSwitch}"
                              ToolTip="{lang:Lang {x:Static lang:LangKey.Topmost_ToolTip}}" />
            </hc:SimpleStackPanel>
        </Grid>
    </hc:Window.NonClientAreaContent>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Margin="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <v:NicSelectorView />

            <hc:Divider Grid.Row="1"
                        Margin="64,4"
                        LineStrokeThickness="1" />

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.3*"
                                      MinWidth="200" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*"
                                      MinWidth="270" />
                </Grid.ColumnDefinitions>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <v:NicInfoCardView />

                    <v:IPConfigListView Grid.Row="1"
                                        Margin="0,4,0,0" />
                </Grid>

                <GridSplitter Grid.Column="1"
                              Height="64"
                              Style="{StaticResource VGridSplitterStyle}" />

                <hc:ToggleBlock Grid.Column="2"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                IsChecked="{Binding IsInNicConfigDetailView}">
                    <hc:ToggleBlock.UnCheckedContent>
                        <hc:TransitioningContentControl TransitionMode="Left2Right">
                            <v:IPConfigDetailView />
                        </hc:TransitioningContentControl>
                    </hc:ToggleBlock.UnCheckedContent>

                    <hc:ToggleBlock.CheckedContent>
                        <c:DeferredContent>
                            <c:DeferredContent.DeferredContentTemplate>
                                <DataTemplate>
                                    <hc:TransitioningContentControl TransitionMode="Right2Left">
                                        <v:NicConfigDetailView />
                                    </hc:TransitioningContentControl>
                                </DataTemplate>
                            </c:DeferredContent.DeferredContentTemplate>
                        </c:DeferredContent>
                    </hc:ToggleBlock.CheckedContent>
                </hc:ToggleBlock>
            </Grid>
        </Grid>

        <v:StatusBarView Grid.Row="1"
                         Height="24"
                         FontFamily="Microsoft YaHei UI"
                         FontSize="10" />
    </Grid>
</hc:Window>
