<UserControl x:Class="IPConfig.Views.NicSelectorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:b="clr-namespace:IPConfig.Behaviors"
             xmlns:control="clr-namespace:IPConfig.Controls"
             xmlns:conv="clr-namespace:IPConfig.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:lang="clr-namespace:IPConfig.Languages"
             xmlns:m="clr-namespace:IPConfig.Models"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:net="clr-namespace:System.Net.NetworkInformation;assembly=System"
             xmlns:vm="clr-namespace:IPConfig.ViewModels"
             b:InputBindingBehavior.PropagateInputBindingsToWindow="True"
             d:DataContext="{d:DesignInstance Type=vm:NicViewModel,
                                              IsDesignTimeCreatable=True}"
             d:DesignWidth="400"
             mc:Ignorable="d">
    <UserControl.Resources>
        <control:BindingProxy x:Key="Proxy"
                              Data="{Binding}" />

        <conv:OperationalStatusToolTipConverter x:Key="OpStatusToolTipConverter" />
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <UserControl.InputBindings>
        <KeyBinding Key="F5"
                    Command="{Binding Data.RefreshCommand, Source={StaticResource Proxy}}"
                    CommandParameter="{StaticResource True}" />
    </UserControl.InputBindings>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <hc:ComboBox Height="36"
                     hc:InfoElement.Placeholder="{Binding NicSelectorPlaceholder}"
                     ItemsSource="{Binding AllNics}"
                     SelectedItem="{Binding SelectedNic}"
                     ToolTip="{Binding SelectedNic}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding ReadLastUsedIPv4ConfigCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <hc:ComboBox.ItemTemplate>
                <DataTemplate DataType="{x:Type m:Nic}">
                    <hc:SimpleStackPanel Orientation="Horizontal">
                        <Border x:Name="NicOpStatusBorder"
                                Padding="2"
                                VerticalAlignment="Center"
                                Background="{DynamicResource ThirdlyTextBrush}"
                                CornerRadius="4"
                                ToolTip="{Binding OperationalStatus, Converter={StaticResource OpStatusToolTipConverter}}">
                            <TextBlock Foreground="White">
                                <Run Text="[" /><Run Text="{Binding OperationalStatus, Mode=OneWay}" /><Run Text="]" />
                            </TextBlock>
                        </Border>

                        <Border x:Name="NicTypeBorder"
                                Margin="4,0,0,0"
                                Padding="2"
                                VerticalAlignment="Center"
                                CornerRadius="4"
                                ToolTip="{Binding NetworkInterfaceType}">
                            <TextBlock Foreground="White">
                                <Run Text="[" /><Run Text="{Binding Name, Mode=OneWay}" /><Run Text="]" />
                            </TextBlock>
                        </Border>

                        <TextBlock Margin="4,0,0,0"
                                   VerticalAlignment="Center"
                                   Text="{Binding Description}"
                                   ToolTip="{Binding}" />
                    </hc:SimpleStackPanel>

                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding OperationalStatus}"
                                     Value="{x:Static net:OperationalStatus.Up}">
                            <Setter TargetName="NicOpStatusBorder" Property="Background" Value="{StaticResource SuccessBrush}" />
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ConnectionType}" Value="{x:Static m:ConnectionType.Ethernet}" />
                                <Condition Binding="{Binding SimpleNicType, IsAsync=True}" Value="{x:Static m:SimpleNicType.Other}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="NicTypeBorder" Property="Style" Value="{StaticResource BorderTipPrimary}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ConnectionType}" Value="{x:Static m:ConnectionType.Wlan}" />
                                <Condition Binding="{Binding SimpleNicType, IsAsync=True}" Value="{x:Static m:SimpleNicType.Other}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="NicTypeBorder" Property="Style" Value="{StaticResource BorderTipInfo}" />
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding SimpleNicType, IsAsync=True}"
                                     Value="{x:Static m:SimpleNicType.Ethernet}">
                            <Setter TargetName="NicTypeBorder" Property="Background" Value="{StaticResource PrimaryBrush}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding SimpleNicType, IsAsync=True}"
                                     Value="{x:Static m:SimpleNicType.Wlan}">
                            <Setter TargetName="NicTypeBorder" Property="Background" Value="{StaticResource InfoBrush}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding SimpleNicType, IsAsync=True}"
                                     Value="{x:Static m:SimpleNicType.Loopback}">
                            <Setter TargetName="NicTypeBorder" Property="Background" Value="{StaticResource WarningBrush}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding SimpleNicType, IsAsync=True}"
                                     Value="{x:Static m:SimpleNicType.Other}">
                            <Setter TargetName="NicTypeBorder" Property="Background" Value="{StaticResource SecondaryBorderBrush}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding SimpleNicType, IsAsync=True}"
                                     Value="{x:Static m:SimpleNicType.Unknown}">
                            <Setter TargetName="NicTypeBorder" Property="Background" Value="{StaticResource DangerBrush}" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </hc:ComboBox.ItemTemplate>
        </hc:ComboBox>

        <ProgressBar Height="4"
                     Margin="1,0,1,1"
                     VerticalAlignment="Bottom"
                     d:Visibility="Visible"
                     IsIndeterminate="True"
                     Opacity="0.5"
                     Visibility="{Binding RefreshCommand.IsRunning, Converter={StaticResource Boolean2VisibilityConverter}}" />

        <Button Grid.Column="1"
                Height="36"
                Margin="4,0,0,0"
                Command="{Binding RefreshCommand}"
                CommandParameter="{StaticResource True}"
                Content="{lang:Lang {x:Static lang:LangKey.Refresh}}"
                ToolTip="{lang:Lang {x:Static lang:LangKey.Refresh_ToolTip}}" />
    </Grid>
</UserControl>
